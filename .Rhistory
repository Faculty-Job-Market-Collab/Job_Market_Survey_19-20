question == "scholar_hindex" & response > 21 ~ "yes",
question == "apps_submitted" & response > 63 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_qualif_data %>%
filter(question == "scholar_citations_all") %>%
distinct()
bio_qualif_data %>%
filter(question == "peer-reviewed_papers") %>%
distinct()
bio_qualif_data %>%
filter(question == "first_author")
bio_qualif_data %>%
filter(question == "first_author") %>%
filter(!is.na(response)) %>%
distinct() %>% count(response) %>%
mutate(percent = get_percent(n, 164),
response = as.numeric(response)) %>%
ggplot(aes(x=response, y=percent))+
geom_col(position = "dodge")+
scale_y_continuous(expand = c(0,0))+ #ensure bars directly abut axis, no padding
labs(y="Respondents (%)")+
labs(x="Number of first-author papers")+
my_theme_horiz
bio_qualifications <- bio_qualifications %>%
mutate(postdoc_fellow = if_else(str_detect(grants_awarded, "Postdoctoral"),
"Yes", "No")) %>%
mutate(#paper_outliers = if_else(`peer-reviewed_papers` > 31, "yes", "no"),
#abstract_outliers = if_else(conference_abstracts > 27, "yes", "no"),
#corres_outliers = if_else(corresponding_author > 5, "yes", "no"),
#first_outliers = if_else(first_author > 13, "yes", "no"),
cites_outliers = if_else(scholar_citations_all > 1275, "yes", "no"),
hindex_outliers = if_else(scholar_hindex > 21, "yes", "no"))
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
#question == "peer-reviewed_papers" & response > 31 ~ "yes",
#question == "conference_abstracts" & response > 27 ~ "yes",
#question == "corresponding_author" & response > 5 ~ "yes",
#question == "first_author" & response > 13 ~ "yes",
question == "scholar_citations_all" & response > 1275 ~ "yes",
question == "scholar_hindex" & response > 21 ~ "yes",
#question == "apps_submitted" & response > 63 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_qualif_data %>%
filter(question == "scholar_hindex") %>%
distinct() %>%
count(response) %>%
mutate(percent = get_percent(n, 148)) %>%
ggplot(aes(x=as.numeric(response), y = percent))+
geom_col()+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,30))+
labs(y="Respondents (%)", x="Google Scholar H-index")+
my_theme_horiz
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
#question == "peer-reviewed_papers" & response > 31 ~ "yes",
#question == "conference_abstracts" & response > 27 ~ "yes",
#question == "corresponding_author" & response > 5 ~ "yes",
#question == "first_author" & response > 13 ~ "yes",
question == "scholar_citations_all" & response > 1275 ~ "yes",
#question == "scholar_hindex" & response > 21 ~ "yes",
#question == "apps_submitted" & response > 63 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
#calculate outliers using mad
get_mad_outliers <- function(data, col_name){ #place dataset and column name in quotes
df <- get(data) %>%
select(!!sym(col_name)) %>%
mutate('{col_name}' := as.numeric(!!sym(col_name)))
calc_sd <- sd(df[[deparse(ensym(col_name))]], na.rm = TRUE)
calc_med <- median(df[[deparse(ensym(col_name))]], na.rm = TRUE) #calculate column median
abs_dev_df <- df %>%
mutate(abs_dev = abs(!!sym(col_name) - as.numeric(calc_med)))
est_c <- calc_sd/(median(abs_dev_df$abs_dev, na.rm = TRUE))
calc_mad <- est_c * median(abs_dev_df$abs_dev, na.rm = TRUE)
calc_max <- as.numeric(calc_med)+(3*as.numeric(calc_mad))
mad_df <- tibble(
data = col_name,
mad = calc_mad,
max = calc_max
)
return(mad_df)
}
col_name <- "scholar_citations_all"
data <- "qualifications"
df <- get(data) %>%
select(!!sym(col_name)) %>%
mutate('{col_name}' := as.numeric(!!sym(col_name)))
calc_sd <- sd(df[[deparse(ensym(col_name))]], na.rm = TRUE)
calc_med <- median(df[[deparse(ensym(col_name))]], na.rm = TRUE) #calculate column median
abs_dev_df <- df %>%
mutate(abs_dev = abs(!!sym(col_name) - as.numeric(calc_med)))
est_c <- calc_sd/(median(abs_dev_df$abs_dev, na.rm = TRUE))
calc_mad <- est_c * median(abs_dev_df$abs_dev, na.rm = TRUE)
calc_max <- as.numeric(calc_med)+(3*as.numeric(calc_mad))
#calculate outliers using mad
get_mad_outliers <- function(data, col_name){ #place dataset and column name in quotes
df <- get(data) %>%
select(!!sym(col_name)) %>%
mutate('{col_name}' := as.numeric(!!sym(col_name)))
calc_sd <- sd(df[[deparse(ensym(col_name))]], na.rm = TRUE)
calc_med <- median(df[[deparse(ensym(col_name))]], na.rm = TRUE) #calculate column median
abs_dev_df <- df %>%
mutate(abs_dev = abs(!!sym(col_name) - as.numeric(calc_med)))
est_c <- calc_sd/(median(abs_dev_df$abs_dev, na.rm = TRUE))
calc_mad <- est_c * median(abs_dev_df$abs_dev, na.rm = TRUE)
calc_max <- as.numeric(calc_med)+(3*as.numeric(calc_mad))
mad_df <- tibble(
data = col_name,
mad = calc_mad,
max = calc_max
)
return(mad_df)
}
metric_quals <- c("peer-reviewed_papers", "conference_abstracts",
"corresponding_author", "first_author",
"scholar_citations_all", "scholar_hindex",
"apps_submitted")
metric_outliers <- map_dfr(.x = metric_quals, function(x) get_mad_outliers("bio_clean", x))
View(metric_outliers)
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & response > 33 ~ "yes",
question == "conference_abstracts" & response > 45 ~ "yes",
question == "corresponding_author" & response > 10 ~ "yes",
question == "first_author" & response > 15 ~ "yes",
question == "scholar_citations_all" & response > 2199 ~ "yes",
question == "scholar_hindex" & response > 19 ~ "yes",
question == "apps_submitted" & response > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_qualifications <- bio_qualifications %>%
mutate(postdoc_fellow = if_else(str_detect(grants_awarded, "Postdoctoral"),
"Yes", "No")) %>%
mutate(paper_outliers = if_else(`peer-reviewed_papers` > 33, "yes", "no"),
abstract_outliers = if_else(conference_abstracts > 45, "yes", "no"),
corres_outliers = if_else(corresponding_author > 10, "yes", "no"),
first_outliers = if_else(first_author > 15, "yes", "no"),
cites_outliers = if_else(scholar_citations_all > 2199, "yes", "no"),
hindex_outliers = if_else(scholar_hindex > 19, "yes", "no"))
bio_qualif_data %>%
filter(question == "scholar_hindex") %>%
distinct() %>%
count(response) %>%
mutate(percent = get_percent(n, 148)) %>%
ggplot(aes(x=as.numeric(response), y = percent))+
geom_col()+
scale_y_continuous(expand = c(0,0))+
scale_x_continuous(limits = c(0,30))+
labs(y="Respondents (%)", x="Google Scholar H-index")+
my_theme_horiz
bio_qualif_data %>%
filter(question == "first_author") %>%
filter(!is.na(response)) %>%
distinct() %>% count(response) %>%
mutate(percent = get_percent(n, 164),
response = as.numeric(response)) %>%
ggplot(aes(x=response, y=percent))+
geom_col(position = "dodge")+
scale_y_continuous(expand = c(0,0))+ #ensure bars directly abut axis, no padding
labs(y="Respondents (%)")+
labs(x="Number of first-author papers")+
my_theme_horiz
bio_qualif_data %>%
filter(question == "first_author")
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & response > 33 ~ "yes",
question == "conference_abstracts" & response > 45 ~ "yes",
question == "corresponding_author" & response > 10 ~ "yes",
question == "first_author" & response > 15 ~ "yes",
question == "scholar_citations_all" & response > 2199 ~ "yes",
question == "scholar_hindex" & response > 19 ~ "yes",
question == "apps_submitted" & response > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_tidy_data %>% filter(question == "first_author") %>% count(response)
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & response > 33 ~ "yes",
question == "conference_abstracts" & response > 45 ~ "yes",
question == "corresponding_author" & response > 10 ~ "yes",
#question == "first_author" & response > 15 ~ "yes",
question == "scholar_citations_all" & response > 2199 ~ "yes",
question == "scholar_hindex" & response > 19 ~ "yes",
question == "apps_submitted" & response > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_tidy_data %>% filter(question == "first_author") %>% count(response)
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & as.numeric(response) > 33 ~ "yes",
question == "conference_abstracts" & as.numeric(response) > 45 ~ "yes",
question == "corresponding_author" & as.numeric(response) > 10 ~ "yes",
question == "first_author" & as.numeric(response) > 15 ~ "yes",
question == "scholar_citations_all" & as.numeric(response) > 2199 ~ "yes",
question == "scholar_hindex" & as.numeric(response) > 19 ~ "yes",
question == "apps_submitted" & as.numeric(response) > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_tidy_data %>% filter(question == "first_author") %>% count(response)
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & as.numeric(response) > 33 ~ "yes",
question == "conference_abstracts" & as.numeric(response) > 45 ~ "yes",
question == "corresponding_author" & as.numeric(response) > 10 ~ "yes",
question == "first_author" & as.numeric(response) > 15 ~ "yes",
question == "scholar_citations_all" & as.numeric(response) > 2199 ~ "yes",
question == "scholar_hindex" & as.numeric(response) > 19 ~ "yes",
question == "apps_submitted" & as.numeric(response) > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
bio_qualifications <- bio_qualifications %>%
mutate(postdoc_fellow = if_else(str_detect(grants_awarded, "Postdoctoral"),
"Yes", "No")) %>%
mutate(paper_outliers = if_else(as.numeric(`peer-reviewed_papers`) > 33, "yes", "no"),
abstract_outliers = if_else(as.numeric(conference_abstracts) > 45, "yes", "no"),
corres_outliers = if_else(as.numeric(corresponding_author) > 10, "yes", "no"),
first_outliers = if_else(as.numeric(first_author) > 15, "yes", "no"),
cites_outliers = if_else(as.numeric(scholar_citations_all) > 2199, "yes", "no"),
hindex_outliers = if_else(as.numeric(scholar_hindex) > 19, "yes", "no"))
bio_qualif_data %>%
filter(question == "first_author") %>%
filter(!is.na(response)) %>%
distinct() %>% count(response) %>%
mutate(percent = get_percent(n, 164),
response = as.numeric(response)) %>%
ggplot(aes(x=response, y=percent))+
geom_col(position = "dodge")+
scale_y_continuous(expand = c(0,0))+ #ensure bars directly abut axis, no padding
labs(y="Respondents (%)")+
labs(x="Number of first-author papers")+
my_theme_horiz
bio_qualif_data %>%
filter(question == "first_author")
bio_qualif_data <- bio_tidy_data %>%
filter(section == "qualifications") %>%
select(1:3) %>%
distinct()
bio_qualif_data %>%
filter(question == "first_author") %>%
filter(!is.na(response)) %>%
distinct() %>% count(response) %>%
mutate(percent = get_percent(n, 164),
response = as.numeric(response)) %>%
ggplot(aes(x=response, y=percent))+
geom_col(position = "dodge")+
scale_y_continuous(expand = c(0,0))+ #ensure bars directly abut axis, no padding
labs(y="Respondents (%)")+
labs(x="Number of first-author papers")+
my_theme_horiz
source("~/Desktop/Job_Market_Survey_19-20/jadavji_biology/code/figure_1.R")
source("~/Desktop/Job_Market_Survey_19-20/jadavji_biology/code/figure_1.R")
source("~/Desktop/Job_Market_Survey_19-20/jadavji_biology/code/figure_2.R")
#Figure 3.----
fig3_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "adjusted_gender" | question == "off_site_interviews" |
question == "on_site_interviews" | question == "peer" |
question == "faculty_offers" |
question == "apps_submitted_binned" |
question == "apps_submitted") %>%
distinct() %>%
spread(key = question, value = response) %>%
filter(!is.na(adjusted_gender)) %>%
filter(!is.na(faculty_offers)) %>%
mutate(faculty_offers = case_when(
as.numeric(faculty_offers) == 0 ~ "0",
as.numeric(faculty_offers) == 1 ~ "1",
as.numeric(faculty_offers) >= 1 ~ ">1"
),
faculty_offers = factor(faculty_offers, levels = c("0", "1", ">1")))
source("jadavji_biology/code/figure_3.R")
#A. Remote interviews----
fig3a_plot <- fig3_data %>%
filter(!is.na(apps_submitted)) %>%
get_plot_summary(., "faculty_offers",
"apps_submitted_binned", FALSE) %>%
ggplot(aes(x = factor(apps_submitted_binned,
levels = bin_levels_small), y = percent))+
geom_col(position = "dodge")+
facet_wrap(~faculty_offers)+
scale_y_continuous(limits = c(0,30), expand = c(0,0))+
labs(x = "Number of applications submitted",
y = "% Respondents\n(by number of faculty offers)")+
my_theme
ggsave(filename = paste0("jadavji_biology/figures/fig3a_", Sys.Date(), ".jpeg"),
width = 8, height = 5.5)
ggsave(filename = paste0("jadavji_biology/figures/fig3a_", Sys.Date(), ".jpeg"),
width = 9, height = 5.5)
ggsave(filename = paste0("jadavji_biology/figures/fig3a_", Sys.Date(), ".jpeg"),
width = 11, height = 5.5)
# Figure 4. ----
fig4_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "adjusted_gender" | question == "CNS_status" |
question == "CNS_first_author" | question == "peer" |
question == "faculty_offers") %>%
distinct() %>%
spread(key = question, value = response)  %>% distinct() %>%
filter(!is.na(adjusted_gender)) %>%
filter(!is.na(CNS_status)) %>%
mutate(faculty_offers = case_when(
as.numeric(faculty_offers) == 0 ~ "0",
as.numeric(faculty_offers) == 1 ~ "1",
as.numeric(faculty_offers) >= 1 ~ ">1"
),
faculty_offers = factor(faculty_offers, levels = c("0", "1", ">1")),
CNS_first_author = replace_na(CNS_first_author, "0"))
#Figure 5. ----
fig5_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "adjusted_gender" |
question == "teaching_status" |
question == "faculty_offers" |
question == "peer") %>%
distinct() %>%
spread(key = question, value = response) %>%
filter(!is.na(adjusted_gender)) %>%
mutate(faculty_offers = case_when(
as.numeric(faculty_offers) == 0 ~ "0",
as.numeric(faculty_offers) == 1 ~ "1",
as.numeric(faculty_offers) >= 1 ~ ">1"
),
faculty_yn = if_else(as.numeric(faculty_offers) == 0, "no", "yes"),
faculty_offers = factor(faculty_offers, levels = c("0", "1", ">1")))
fig5_inst_bin_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "PUI_apps_submitted_binned" |
question == "R1_apps_submitted_binned") %>%
distinct() %>%
rename(inst_type_bin = question, values_binned = response)
fig5_inst_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "PUI_apps_submitted" |
question == "R1_apps_submitted") %>%
distinct() %>%
rename(inst_type = question, values = response)
fig5_teaching_types_data <- bio_tidy_data %>%
select(id, question, response) %>%
filter(question == "teaching_types") %>%
select(-question) %>%
distinct() %>% rename(teaching_type = response)
fig5_data_join <- left_join(fig5_data, fig5_inst_data, by = "id") %>%
left_join(.,  fig5_teaching_types_data, by = "id") %>%
left_join(.,  fig5_inst_bin_data, by = "id")
fig5_data <- fig5_data_join %>%
mutate(inst_type = str_remove_all(inst_type, "(?<=PUI|R1).*"),
inst_type_bin = str_remove_all(inst_type_bin, "(?<=PUI|R1).*"),
inst_type = str_replace_all(inst_type, "1", "I"),
inst_type_bin = str_replace_all(inst_type_bin, "1", "I")) %>%
distinct()
source("jadavji_biology/code/figure_4.R")
source("jadavji_biology/code/figure_4.R")
source("jadavji_biology/code/figure_5.R")
fig4a_table <- table(fig3_data$apps_submitted, fig3_data$adjusted_gender)
fig4a_chi <- chisq.test(fig4a_table)
fig4a_data <- fig3_data %>%
filter(!is.na(apps_submitted_binned)) %>%
count(adjusted_gender, apps_submitted_binned) %>%
spread(key = apps_submitted_binned, value = n) %>%
rowwise() %>%
mutate(total = sum(c_across(as.numeric(2:14)), na.rm = TRUE)) %>%
gather(2:14, key = "apps_submitted_binned", value = "n") %>%
mutate(n = replace_na(n, 0),
percent_gender = get_percent(n, total))
#A. ----
fig4a_table <- table(fig3_data$apps_submitted, fig3_data$adjusted_gender)
fig4a_chi <- chisq.test(fig4a_table)
fig4a_data <- fig3_data %>%
filter(!is.na(apps_submitted_binned)) %>%
count(adjusted_gender, apps_submitted_binned) %>%
spread(key = apps_submitted_binned, value = n) %>%
rowwise() %>%
mutate(total = sum(c_across(as.numeric(2:14)), na.rm = TRUE)) %>%
gather(2:14, key = "apps_submitted_binned", value = "n") %>%
mutate(n = replace_na(n, 0),
percent_gender = get_percent(n, total))
fig4a_data <- fig3_data %>%
filter(!is.na(apps_submitted_binned)) %>%
count(adjusted_gender, apps_submitted_binned) %>%
spread(key = apps_submitted_binned, value = n) %>%
rowwise()
View(fig4a_data)
source("~/Desktop/Job_Market_Survey_19-20/jadavji_biology/code/figure_4.R")
source("~/Desktop/Job_Market_Survey_19-20/jadavji_biology/code/figure_5.R")
#B. ----
fig5b_plot <- fig5_data %>%
filter(!is.na(inst_type)) %>%
filter(!is.na(peer)) %>%
select(id, peer, inst_type_bin, values_binned) %>%
distinct() %>%
count(peer, inst_type_bin, values_binned) %>%
spread(key = values_binned, value = n) %>%
mutate(across(3:15, ~ replace_na(.x, replace = 0))) %>%
rowwise() %>%
mutate(total = sum(c_across(as.numeric(3:15)), na.rm = TRUE),
across(3:15, ~ get_percent(.x, total))) %>%
gather(3:15, key = values_binned, value = percent) %>%
select(-total) %>% distinct() %>%
ggplot(aes(x = factor(values_binned,
levels = bin_levels_small),
y = percent,
fill = factor(peer, levels = peer_breaks)))+
geom_col(position = "dodge")+
scale_fill_manual(breaks = peer_breaks, values = peer_color)+
scale_y_continuous(expand = c(0,0), limits = c(0,60))+
facet_wrap(~inst_type_bin)+
labs(x = "Number of applications submitted",
y = "Percent of peer\n(grouped by institution type)",
fill = "peer")+
my_theme
ggsave(filename = paste0("jadavji_biology/figures/fig5b_", Sys.Date(), ".jpeg"),
width = 10, height = 5.5)
demo_table <- bio_demo_data %>%
filter(question %in% c("adjusted_gender", "age", "research_category",
"residence", "peer", "dependents",
"position", "legal_status", "disability_status",
"first_gen_undergrad", "first_gen_phd")) %>%
mutate(response = fct_collapse(response,
"Citizen/Resident" = c("Citizen", "Permanent resident"),
"Visa" = c("Student visa", "Work visa"),
"Other" = c("Choose not to disclose", "Outside the US or CA"),
"Yes" = c("Yes, hidden", "Yes, visible"),
"Yes, multiple children/adult(s)" = c("Yes, adult(s)",
"Yes, multiple children",
"Yes, adult(s) and child(ren)")
)) %>%
count(question, response) %>%
mutate(percent_total = get_percent(n, 332))
write_csv(demo_table, "jadavji_biology/figures/demographics.csv")
#table of application metrics
metrics_table <- bio_tidy_data %>%
select(id, question, response) %>%
filter(!is.na(question)) %>%
filter(question %in% c("first_author", "corresponding_author",
"peer-reviewed_papers", "scholar_hindex",
"scholar_citations_all", "CNS_status",
"application_cycles", "faculty_offers",
"apps_submitted")) %>%
distinct() %>%
group_by(question) %>%
summarise(n = n(), med = median(as.numeric(response),
na.rm = TRUE),
std_dev = round(sd(as.numeric(response, na.rm = TRUE)),
digits = 2),
min_val = min(as.numeric(response, na.rm = TRUE)),
max_val = max(as.numeric(response, na.rm = TRUE))) %>%
mutate(range = paste0("(", min_val, ", ", max_val, ")")) %>%
select(-min_val, -max_val)
write_csv(metrics_table, "jadavji_biology/figures/metrics.csv")
metrics_table2 <- bio_tidy_data %>%
select(id, question, response) %>%
filter(!is.na(question)) %>%
filter(question == "grants_awarded") %>%
filter(response != "Transition Award as PI") %>%
distinct() %>%
count(question, response) %>%
mutate(percent = get_percent(n, 332))
write_csv(metrics_table2, "jadavji_biology/figures/grants.csv")
bio_tidy_data <- left_join(bio_ids, tidy_data, by = 'id') %>%
mutate(outlier = case_when(
question == "peer-reviewed_papers" & as.numeric(response) > 33 ~ "yes",
question == "conference_abstracts" & as.numeric(response) > 45 ~ "yes",
question == "corresponding_author" & as.numeric(response) > 10 ~ "yes",
question == "first_author" & as.numeric(response) > 15 ~ "yes",
question == "scholar_citations_all" & as.numeric(response) > 2199 ~ "yes",
question == "scholar_hindex" & as.numeric(response) > 19 ~ "yes",
question == "apps_submitted" & as.numeric(response) > 91 ~ "yes",
TRUE ~ "no"
)) %>%
filter(outlier == "no") %>%
select(-outlier)
write_csv(bio_tidy_data, "jadavji_biology/data/bio_tidy_data.csv")
chi_list <- c("fig4a_chi",
"fig4c_chi", "fig4d_chi",
"fig4e_chi", "fig4f_chi")
plot_list <- c('4A', '4C', '4D', '4E', '4F')
fig4_chi_tbl_raw <- map2_df(chi_list, plot_list, get_wilcox_tbl)
fig4_chi_tbl <- fig4_chi_tbl_raw %>%
spread(key = attribute, value = value) %>%
select(figure, method, `statistic.X-squared`, p.value, parameter.df)
write_csv(fig4_chi_tbl, file = paste0("jadavji_biology/figures/fig4adef_chi_stats",
Sys.Date(),".csv"))
chi_list <- c("fig5a_chi",
"fig5c_chi", "fig5d_chi",
"fig5e_chi", "fig5f_chi")
plot_list <- c('5A', '5C', '5D', '5E', '5F')
fig5_chi_tbl_raw <- map2_df(chi_list, plot_list, get_wilcox_tbl)
fig5_chi_tbl <- fig5_chi_tbl_raw %>%
spread(key = attribute, value = value) %>%
select(figure, method, `statistic.X-squared`, p.value, parameter.df)
write_csv(fig5_chi_tbl, file = paste0("jadavji_biology/figures/fig5adef_chi_stats",
Sys.Date(),".csv"))
